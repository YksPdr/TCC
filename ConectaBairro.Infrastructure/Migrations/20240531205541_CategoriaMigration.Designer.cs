// <auto-generated />
using System;
using ConectaBairro.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConectaBairro.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240531205541_CategoriaMigration")]
    partial class CategoriaMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConectaBairro.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Atividades físicas e competições recreativas.",
                            Nome = "Esportivo"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Diversão e lazer para todos os gostos.",
                            Nome = "Entreterimento"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Exploração da arte, história e tradições.",
                            Nome = "Cultaral"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Eventos voltados para negócios.",
                            Nome = "Corporativo"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Práticas e celebrações voltadas para a religião.",
                            Nome = "Religioso"
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Eventos voltados para educação",
                            Nome = "Educacional"
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "Eventos relacionados a organizações e instituições.",
                            Nome = "Institucional"
                        });
                });

            modelBuilder.Entity("ConectaBairro.Domain.Models.Conta", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Tipo de conta baseado no ENUM da aplicação: 0 para organizador, 1 para Munícipe");

                    b.HasKey("Id");

                    b.ToTable("tipo_conta", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Tipo = "Organizador"
                        },
                        new
                        {
                            Id = (byte)2,
                            Tipo = "Municipe"
                        });
                });

            modelBuilder.Entity("ConectaBairro.Domain.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("HorarioFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("LimiteParticipantes")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorIngresso")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UserId");

                    b.ToTable("evento", (string)null);
                });

            modelBuilder.Entity("ConectaBairro.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte>("TipoContaId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("TipoContaId");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("ConectaBairro.Domain.Models.Evento", b =>
                {
                    b.HasOne("ConectaBairro.Domain.Models.Categoria", "Categorias")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConectaBairro.Domain.Models.Usuario", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ConectaBairro.Domain.Models.Usuario", b =>
                {
                    b.HasOne("ConectaBairro.Domain.Models.Conta", "TipoDeConta")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDeConta");
                });

            modelBuilder.Entity("ConectaBairro.Domain.Models.Conta", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
